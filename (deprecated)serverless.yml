# Base configuration for a monorepo serverless project
# Each CLI action requires '--service <service-name>' flag to define the current working service

service: ${opt:service}                           # service name must be provided(based on folder name containing the service functions)
frameworkVersion: '2'
configValidationMode: warn                        # "error" to block the deployment if any errors were found at any .yml config file

provider:                                         # default configurations(can be overrided)
  name: aws  
  runtime: nodejs12.x
  stage: ${opt:stage, 'local'}
  region: ${opt:region, 'us-east-1'}
  apiName: serverless-template
  memorySize: 128
  timeout: 30
  logRetentionInDays: 7
  # usagePlan:
  #   - free:
  #   - paid:
  # apiKeys:
  #   - free:
  #   - paid:
  # deploymentBucket:
  environment:    
    REGION: ${self:provider.region}
    STAGE: ${self:provider.stage}
    ACCOUNT_ID: { "Ref" : "AWS::AccountId" }
    # API_ID: { "Ref" : "ApiGatewayRestApi" }       # throws and error if there is no "http" event in the service(rather use it per function)
    # HTTP_API_ID: { "Ref" : "HttpApi" }            # throws and error if there is no "httpApi" event in the service(rather use it per function)

  
functions: ${file(./serverless/services/${opt:service}/functions.serverless.yml):functions}          # select functions in services based on "--service" flag

package:
  individually: true                              # pack each function individually(works well with webpack, bundling dryed functions)

plugins:                                          # plugins that provides extra funcionalities(can be removed for the current service by commenting the plugin)
  - serverless-webpack                            # plugin to bundle only necessary code from service functions(must be the first on the list)    
  - serverless-offline-sns                        # plugin to test sns locally alongside serverless offline
  #- serverless-offline-sqs                        # plugin to test sqs locally alongside serverless offline(must be between webpack and serverless-offline)
  - serverless-offline                            # plugin to locally debug with api gateway  
  # - serverless-domain-manager                   # TODO
  # - serverless-localstack                       # TODO

  # - serverless-plugin-conditional-functions     # TODO?
  # - serverless-plugin-ifelse                    # TODO?

  # - serverless-plugin-aws-alerts                # TODO
  # - serverless-prune-plugin                     # TODO
  # - serverless-plugin-lambda-dead-letter        # TODO
  # - serverless-offline-scheduler                # TODO
  # - serverless-plugin-scripts                   # TODO  
  - serverless-iam-roles-per-function #REQUIRES DOWNGRADE TO serverless@2.4.0, UPGRADE TO @NEXT and disable configValidationMode
  - serverless-apigw-binary                       # plugin to allow returning binary data throught API Gateway(it will throw an error if there is a non http triggered function in the service deploy)  

custom:
  webpack:                                        # config webpack plugin
    webpackConfig: './webpack.config.js'        
    includeModules: true
  serverless-offline:                             # config serverless offline plugin(https://localhost:4000)
    httpsProtocol: "./resources/local-ssl-tls"
    host: 0.0.0.0                                 # binding to special address to make "offline" server reachable from outside docker network
    httpPort: 4000
  serverless-offline-sns:                         # config serverless offline sns plugin(http://localhost:4001 accessed only from functions)
    port: 4004 #4001
    accountId: { "Ref" : "AWS::AccountId" }
  serverless-offline-sqs:                         # config serverless offline sns plugin(http://localhost:4002  accessed only from functions)
    autoCreate: true
    #apiVersion: '2012-11-05'
    endpoint: queue-container:9324
    #region: ${self:provider.region}
    #accessKeyId: root
    #secretAccessKey: root
    #skipCacheInvalidation: false  

  apigwBinary:                                    # config allowed mime types
    types:
      - 'image/jpeg'
      - 'text/html'
      - 'application/pdf'
      - 'application/vnd.ms-excel'