# docker-compose file setting up local testing environment for AWS services alongside serverless plugins
# Feel free to comment out unnused services

version: '3.8'
services:
    serverless-container:                                             # Setting up Serverless development environment        
        image: esteveslima/serverless-template-image:latest           
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
           - ./:/serverless-template                                  # Using the entire project folder as volume for development
           - ./resources/config/aws/.aws:/home/node/.aws              # Setting up AWS credentials inside the container(~/.aws)
        working_dir: /serverless-template      
        environment:
            - NODE_TLS_REJECT_UNAUTHORIZED=0                          # Fixing SSL/TLS errors in local development environment(only to enable sls offline https endpoints)
        restart: "no"
        depends_on:
            # - mysql-container
            # - mongo-container
            # - redis-container
            # - queue-container
            - dynamodb-container
        expose:
            - "4000-4010"
        ports:
            - "4000:4000"
            # - "4000-4010:4000-4010"
    # mysql-container:                                                 # Setting up RDS local testing environment with mysql
    #     image: mysql
    #     volumes:
    #        - ./.mysql-storage:/var/lib/mysql                                 
    #     environment:
    #        - MYSQL_USER=root
    #        - MYSQL_PASSWORD=password
    #        - MYSQL_ROOT_PASSWORD=password
    #        - MYSQL_DATABASE=mysql-db                            
    #     restart: always
    #     expose:
    #        - '3306'             
    #     # ports:
    #     #   - '3306:3306'                 
    # mongo-container:                                                  # Setting up MongoDB local testing environment with mongo
    #    image: mongo
    #    volumes:
    #        - ./.mongodb-storage:/data/db                                 
    #    environment:
    #        - MONGO_INITDB_DATABASE=mongo-db                      
    #        #- MONGO_INITDB_ROOT_USERNAME=user                                 
    #        #- MONGO_INITDB_ROOT_PASSWORD=password
    #    restart: always
    #    expose:
    #        - '27017'                         
    #     # ports:
    #     #     - '27017:27017'
    dynamodb-container:                                                 # Setting up DynamoDB local testing environment with dynamoDB local
        image: amazon/dynamodb-local
        restart: always        
        command: "-jar DynamoDBLocal.jar -port 8000 -sharedDb -optimizeDbBeforeStartup -dbPath ./data"
        working_dir: /home/dynamodblocal
        user: root
        volumes:
            - "./.dynamodb-storage:/home/dynamodblocal/data"
        expose:
           - '8000'
        ports:
           - '8000:8000'                                                # shell available at http://localhost:8000/shell/  
    # redis-container:                                                  # Setting up ElastiCache local testing environment with redis
    #     image: redis
    #     command: ["redis-server", "--appendonly", "yes"]
    #     volumes:
    #        - ./.redis-storage:/data
    #     #environment:
    #     restart: always
    #     expose:
    #        - '6379'
    #     # ports:
    #     #    - '6379:6379'         
    # queue-container:                                                  # Setting up SQS local testing environment with elasticMQ
    #     image: softwaremill/elasticmq
    #     restart: always
    #     expose:
    #        - '9324'
    #     ports:
    #        - '9324:9324'
            
