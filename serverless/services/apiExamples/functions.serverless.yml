functions:

  postExample:
    handler:  serverless/services/${self:service}/functions/postExample/src/handler.lambdaFunction    # main exported function to deploy to lambda
    events: 
      - http:
          method: POST
          path: /postExample
          # private:
          # cors:
          # authorizer:
          # request:
          #   schema:                 # input body validation(draft-04 json schema) supported by api gateway
          #     application/json: ${file(serverless/services/${self:service}/functions/postExample/assets/schema.json)}

  getExample:
    handler:  serverless/services/${self:service}/functions/getExample/src/handler.lambdaFunction
    events:
      - http:
          method: GET              
          path: /getExample/{someRequiredPathParameter}
          request:
            parameters:             # those parameters definitions should mark them as required, but they are not working because some unknown reason
              paths:
                someRequiredPathParameter: "true"
              querystrings:
                someRequiredQueryParameter: "true"              
              headers:
                someRequiredHeaderParameter: "true"
  
  # asyncExample:                     # may not be testable with serverless-offline
  #   handler:  serverless/services/${self:service}/functions/asyncExample/src/handler.lambdaFunction
  #   timeout: 900                    # without Api Gateway, lambda functions are able to run up to 15 minutes
  #   events:
  #     - http:
  #         method: POST              
  #         path: /asyncExample/{parameter}
  #         async: true               # setting this to true instantly returns status 200 but keep lambda function running(useful to bypass api gateway timeout)

  # httpApiExample:                   # cheaper and faster for simpler APIs, with less features(check the differences at https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-vs-rest.html)
  #   handler:  serverless/services/${self:service}/functions/httpApiExample/src/handler.lambdaFunction
  #   timeout: 28                     # limited to Api Gateway(29 seg)
  #   events:
  #     - httpApi:                    
  #         method: GET              
  #         path: /httpApiExample/{someParameter}
  #         # cors:                   # cors configuration
  #         # authorizers:            # jwt authorizer supported
